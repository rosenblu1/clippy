# This workflow will install Python dependencies, format, and build with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

# USAGE: nothing will be run if commit message 

name: Build and Release Python App

on:
  push:
    branches: [ "main" ]

env:
  DO_RELEASE: ${{ contains(github.event.head_commit.message, '[RELEASE]') }}

permissions: write-all

jobs:
  build:
    runs-on: macos-latest
    if: ${{ !contains(github.event.head_commit.message, '[NOBUILD]') }}
    outputs:
      output1: ${{ steps.build-and-output-vers.outputs.vers }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black
        python -m pip install Pillow --no-binary :all:
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Format with black
      run: |
        # stop the build if there are Python syntax errors or undefined names
        black clippy.py --verbose
        black setup.py --verbose
    - name: Build Installer and Output vers 
      id: build-and-output-vers
      run: |
        brew install create-dmg
        ./build.sh
        echo `cat vers.txt` >> $GITHUB_OUTPUT
        rm -rf vers.txt
    - name: Push installer
      run: |
        git add Clippy-Installer.dmg
        git commit -m "[WORKFLOW]: Build Python App"
        git push
  release:
    needs: build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create Release
        if: ${{ env.DO_RELEASE == 'true' }}
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ needs.build.outputs.output1 }}
          title: "Clippy Installer"
          prerelease: false
          files: |
            LICENSE.txt
            *.dmg